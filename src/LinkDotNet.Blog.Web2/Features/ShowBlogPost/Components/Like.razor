@using LinkDotNet.Blog.Domain
@using LinkDotNet.Blog.Web.Features.Services
@inject ILocalStorageService LocalStorage
<div class="d-flex align-items-center">
    <span class="clap-btn @BtnClass" @onclick="LikeBlogPost"></span> @BlogPost.Likes
</div>

@code {
    [Parameter]
    public BlogPost BlogPost { get; set; }

    [Parameter] 
    public EventCallback<bool> OnBlogPostLiked { get; set; }
    
    private bool HasLiked { get; set; }

    private string BtnClass => HasLiked ? "clap-active" : string.Empty;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            HasLiked = await GetHasLiked();
            StateHasChanged();
        }
    }

    private async Task LikeBlogPost()
    {
        // Prevent multiple open sites to like / unlike multiple times
        var hasLikedFromLocalStorage = await GetHasLiked();
        if (HasLiked != hasLikedFromLocalStorage)
        {
            return;
        }
        
        HasLiked = !HasLiked;
        await OnBlogPostLiked.InvokeAsync(HasLiked);
        await LocalStorage.SetItemAsync($"hasLiked/{BlogPost.Id}", HasLiked);
    }

    private async Task<bool> GetHasLiked()
    {
        if (await LocalStorage.ContainKeyAsync($"hasLiked/{BlogPost.Id}"))
        {
            return await LocalStorage.GetItemAsync<bool>($"hasLiked/{BlogPost.Id}");
        }

        return false;
    }
}