@using System.IO
@using LinkDotNet.Blog.Web.Features.Admin.BlogPostEditor.Services
@inject IFileProcessor FileProcessor

<div>
    <InputFile
        class="@dropClass"
        @ondragenter="@(_ => dropClass = "can-drop")"
        @ondragleave="@(_ => dropClass = string.Empty)"
        id="@Id"
        OnChange="HandleFileUpload"/>
</div>

@code {
    private string dropClass = string.Empty;

	[Parameter]
	public string Id { get; set; } = string.Empty;

    [Parameter(CaptureUnmatchedValues = true)]
    public IDictionary<string, object> AdditionalAttributes { get; set; }

    [Parameter]
    public EventCallback<string> OnFileUploaded { get; set; }

    private async Task HandleFileUpload(InputFileChangeEventArgs args)
    {
        var content = await FileProcessor.GetContentAsync(args.File);
        await OnFileUploaded.InvokeAsync(content);
    }
}
